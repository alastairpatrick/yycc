BEGIN Outside namespace, unqualified identifier declaration
int a;
EXPECT_AST
[["var","ES","Si","a"]]


BEGIN Outside namespace, :: prefixed identifier declaration
int ::a;
EXPECT_AST
[["var","ES","Si","a"]]


BEGIN Outside namespace, qualified identifier declaration
int a::b::c;
EXPECT_AST
[["var","ES","Si","a::b::c"]]


BEGIN Outside namespace, :: prefixed and qualified identifier declaration
int ::a::b::c;
EXPECT_AST
[["var","ES","Si","a::b::c"]]


BEGIN In namespace, :: prefixed identifier declaration is always relative to root namespace (1)
#namespace X::Y
int ::a;
EXPECT_AST
[["var","ES","Si","a"]]


BEGIN In namespace, :: prefixed identifier declaration is always relative to root namespace (2)
#namespace X::Y
int ::X::a;
EXPECT_AST
[["var","ES","Si","X::a"]]


BEGIN In namespace, :: prefixed identifier declaration is always relative to root namespace (3)
#namespace X::Y
int ::Y::a;
EXPECT_AST
[["var","ES","Si","Y::a"]]



BEGIN In namespace, unqualified identifier declaration is always appended to namespace (1)
#namespace X::Y
int a;
EXPECT_AST
[["var","ES","Si","X::Y::a"]]


BEGIN In namespace, unqualified identifier declaration is always appended to namespace (2)
#namespace X::Y
int X;
EXPECT_AST
[["var","ES","Si","X::Y::X"]]


BEGIN In namespace, unqualified identifier declaration is always appended to namespace (3)
#namespace X::Y
int Y;
EXPECT_AST
[["var","ES","Si","X::Y::Y"]]


BEGIN In namespace, qualified identifier declaration with no leading :: is appended to namespace (1)
#namespace X::Y
int Z::a;
EXPECT_AST
[["var","ES","Si","X::Y::Z::a"]]


BEGIN In namespace, qualified declaration with no leading :: is appended to namespace (2)
#namespace X::Y
int X::a;
EXPECT_AST
[["var","ES","Si","X::Y::X::a"]]


BEGIN In namespace, qualified identifier declaration with no leading :: is appended to namespace (3)
#namespace X::Y
int Y::a;
EXPECT_AST
[["var","ES","Si","X::Y::Y::a"]]


BEGIN Reset namespace
#namespace X::Y
#namespace
int a;
EXPECT_AST
[["var","ES","Si","a"]]


BEGIN Namespace directive may have redundant :: prefix
#namespace ::X::Y
int a;
EXPECT_AST
[["var","ES","Si","X::Y::a"]]


BEGIN Error if namespace token is not identifier
#namespace 7
EXPECT_MESSAGE
:1:12: error unexpected '7' token in directive
END
