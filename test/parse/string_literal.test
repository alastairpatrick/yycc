
BEGIN UTF-8 4-byte string literal
L"🌈"
EXPECT_AST
["S", "Us", "🌈"]

BEGIN Simple char literal
'a'
EXPECT_AST
["C", 97]

BEGIN \a char literal
'\a'
EXPECT_AST
["C", 7]

BEGIN \b char literal
'\b'
EXPECT_AST
["C", 8]

BEGIN \f char literal
'\f'
EXPECT_AST
["C", 12]

BEGIN \n char literal
'\n'
EXPECT_AST
["C", 10]

BEGIN \r char literal
'\r'
EXPECT_AST
["C", 13]

BEGIN \t char literal
'\t'
EXPECT_AST
["C", 9]

BEGIN \v char literal
'\v'
EXPECT_AST
["C", 11]

BEGIN \' char literal
'\''
EXPECT_AST
["C", 39]

BEGIN \" char literal
'"'
EXPECT_AST
["C", 34]

BEGIN \? char literal
'\?'
EXPECT_AST
["C", 63]

BEGIN \\ char literal
'\\'
EXPECT_AST
["C", 92]

BEGIN \xnn char literal
'\x10'
EXPECT_AST
["C", 16]

BEGIN \nnn char literal
'\010'
EXPECT_AST
["C", 8]

BEGIN \unnnn char literal
L'\u0010'
EXPECT_AST
["Us", 16]

BEGIN \Unnnnnnnn char literal
L'\U00000010'
EXPECT_AST
["Us", 16]

BEGIN UTF-8 2-byte char literal
L'π'
EXPECT_AST
["Us", 960]

BEGIN UTF-8 3-byte char literal
L'€'
EXPECT_AST
["Us", 8364]

BEGIN Empty char literal
''
EXPECT_MESSAGE
:1:1: error character literal may only have one character
EXPECT_AST
["C", 0]

BEGIN Multi-character char literal
'aa'
EXPECT_MESSAGE
:1:1: error character literal may only have one character
EXPECT_AST
["C", 97]

BEGIN Empty string literal
""
EXPECT_AST
["S", "C", ""]

BEGIN String literal
"abc"
EXPECT_AST
["S", "C", "abc"]

BEGIN Wide string literal
L"abc"
EXPECT_AST
["S", "Us", "abc"]

BEGIN \xnn string literal
"\x10"
EXPECT_AST
["S", "C", "\u0010"]

BEGIN \nnn string literal
"\010"
EXPECT_AST
["S", "C", "\b"]

BEGIN \unnnn string literal
L"\u0010"
EXPECT_AST
["S", "Us", "\u0010"]

BEGIN \Unnnnnnnn string literal
L"\U00000010"
EXPECT_AST
["S", "Us", "\u0010"]

BEGIN Truncated digits (1)
L"\U0000010"
EXPECT_MESSAGE
:1:1: error truncated character escape code
END

BEGIN Truncated digits (2)
"\x1"
EXPECT_MESSAGE
:1:1: error truncated character escape code
END

BEGIN Smash together multi-byte characters in regular
"\317\200"
EXPECT_AST
["S", "C", "π"]

BEGIN Cannot smash together multi-byte characters in wide string
L"\xC0\xC0"
EXPECT_AST
["S", "Us", "ÀÀ"]

BEGIN UTF-8 2-byte string literal
L"π"
EXPECT_AST
["S", "Us", "π"]

BEGIN UTF-8 3-byte string literal
L"€"
EXPECT_AST
["S", "Us", "€"]

BEGIN Unrecognized escape sequence
"\y"
EXPECT_MESSAGE
:1:1: error unrecognized escape sequence
END
