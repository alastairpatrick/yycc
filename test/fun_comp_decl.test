BEGIN Multiple function declarations
int foo(signed);
signed foo(int);
EXPECT_AST
[["fun", "E", ["F", "Si", "Si"], "foo"]
,["fun", "E", ["F", "Si", "Si"], "foo"]]


BEGIN Multiple function declarations with extern storage class
extern void foo(int);
extern void foo(int);
EXPECT_AST
[["fun", "E", ["F", "V", "Si"], "foo"]
,["fun", "E", ["F", "V", "Si"], "foo"]]


BEGIN Function declaration having internal linkage may not follow function declaration having external linkage
extern void foo(int);
static void foo(int);
EXPECT_MESSAGE
:2:13: error static declaration of 'foo' follows non-static declaration
:1:13: see prior declaration
EXPECT_AST
[["fun","E",["F","V","Si"],"foo"]
,["fun","I",["F","V","Si"],"foo"]]


BEGIN Function declaration having internal linkage may preceed function declaration having external linkage (1)
static void foo(int);
extern void foo(int);
PREPARSE
EXPECT_AST
[["fun","I",["F", "V", "Si"],"foo"]
,["fun","E",["F", "V", "Si"],"foo"]]


BEGIN Function declaration having internal linkage may preceed function declaration having external linkage (2)
static void foo(int);
extern void foo(int);
EXPECT_AST
[["fun","I",["F","V","Si"],"foo"]
,["fun","E",["F","V","Si"],"foo"]]


BEGIN Multiple function declarations with internal linkage
static void foo(int);
static void foo(int);
EXPECT_AST
[["fun","I",["F", "V", "Si"],"foo"]
,["fun","I",["F", "V", "Si"],"foo"]]


BEGIN Empty function definition
void foo(int) {
}
EXPECT_AST
[["fun", "E", ["F", "V", "Si"], "foo", [""], ["block", []]]]


BEGIN Function definition with function declaration (1)
static void foo(int);
void foo(int x) {
}
RESOLVE
EXPECT_GLOBALS
[["fun","I",["F","V","Si"],"foo",["x"],["block",[]]]]


BEGIN Function definition with function declaration (2)
void foo(int x) {
}
extern void foo(int);
RESOLVE
EXPECT_GLOBALS
[["fun","E",["F","V","Si"],"foo",["x"],["block",[]]]]


BEGIN Function initially declared with a function-typed typedef (preparse)
typedef void F(int x);
F foo;
void foo(int x) {
}
PREPARSE
EXPECT_AST
[["typedef",["F","V","Si"],"F"]
,["var","ES","NF","foo"]
,["fun","E",["F","V","Si"],"foo",["x"],["block",[]]]]


BEGIN Function initially declared with a function-typed typedef
typedef void F(int x);
F foo;
void foo(int x) {
}
RESOLVE
EXPECT_GLOBALS
[["typedef",["F","V","Si"],"F"]
,["fun","E",["F","V","Si"],"foo",["x"],["block",[]]]]


BEGIN Function declared with a function-typed typedef in another translation unit (1)
F foo;  // F typedef in another translation unit
void foo(int x) {
}
PREPARSE
EXPECT_AST
[["var","ES","NF","foo"]
,["fun","E",["F","V","Si"],"foo",["x"],["block",[]]]]


BEGIN Function declared with a function-typed typedef in another translation unit (2)
void foo(int x) {
}
F foo;  // F typedef in another translation unit
PREPARSE
EXPECT_AST
[["fun","E",["F","V","Si"],"foo",["x"],["block",[]]]
,["var","ES","NF","foo"]]


BEGIN Error on function redefinition
void foo(int x) {
}
void foo(int x) {
}
RESOLVE
EXPECT_MESSAGE
:3:6: error redefinition of function 'foo'...
:1:6: ...see other
END


BEGIN Block scope extern storage class
void foo(int);
{
    extern void foo(int);
}
RESOLVE
EXPECT_AST
[["fun","E",["F","V","Si"],"foo"],["block",[
    ["fun","E",["F","V","Si"],"foo"]]
]]


BEGIN Redeclare variable with internal linkage at block scope.
static int x;
void foo(int);
{
    typedef int x;
    {
        extern int x, y;
        x * y;  // Multiplies rather than declaring variable "y" of type "int*"
    }
}
RESOLVE
EXPECT_AST
[["var","IS","Si","x"]
,["fun","E",["F","V","Si"],"foo"],["block",[
    ["typedef","Si","x"]
    ,["block",[
        [["var","ES","Si","x"]
        ,["var","ES","Si","y"]]
        ,["*","Nx","Ny"]]
    ]]
]]
