BEGIN Variable of unevaluated typeof expression
typeof(1L / 0L) x;
EXPECT_AST
[["var", "ES", "Sl", "x"]]


BEGIN Variable of typeof type name
typeof(const double) x;
EXPECT_AST
[["var","ES",["Qc","Fd"],"x"]]


BEGIN Variable of typeof_unqual qualified type name (1)
typeof_unqual(const double) x;
EXPECT_AST
[["var", "ES", "Fd", "x"]]


BEGIN Variable of typeof_unqual qualified type name (2)
#type T
typeof_unqual(T) x;
typedef const double T;
EXPECT_GLOBALS
[["typedef",["Qc","Fd"],"T"]
,["var","ES","Fd","x"]]


BEGIN typeof variable
const double x;
typeof(x) y;
EXPECT_AST
[["var","ES",["Qc","Fd"],"x"]
,["var","ES",["Qc","Fd"],"y"]]


BEGIN typeof_unqual variable
const double x;
typeof_unqual(x) y;
EXPECT_AST
[["var","ES",["Qc","Fd"],"x"]
,["var","ES","Fd","y"]]


BEGIN Error on incomplete variable
void x;
EXPECT_MESSAGE
:1:6: error variable 'x' has incomplete type
END


BEGIN #var directive preceeding variable declaration
#var x
int x;
EXPECT_GLOBALS
[["var","ES","Si","x"]]


BEGIN Multiple #var directives for same declarator
#var x
#var x
int x;
EXPECT_GLOBALS
[["var","ES","Si","x"]]


BEGIN Error on unmatched #var
#var x
void* p = &x;
EXPECT_MESSAGE
:1:6: error declaration directive not matched with a proper declaration of 'x'
END


BEGIN Variable declared both static and extern has internal linkage (1)
extern int x;
static int x;
EXPECT_GLOBALS
[["var","IS","Si","x"]]


BEGIN Variable declared both static and extern has internal linkage (2)
static int x;
extern int x;
EXPECT_GLOBALS
[["var","IS","Si","x"]]


BEGIN Error on multiple variable definitions with no linkage
void f() {
    int x;
    int x;
}
EXPECT_MESSAGE
:3:9: error redefinition of variable 'x'
:2:9: ... see other
END


BEGIN Error on multiple parameter definitions
void f(int x, int x) {
}
EXPECT_MESSAGE
:1:19: error redefinition of variable 'x'
:1:12: ... see other
END


BEGIN Local rvalue reference type variable
void f(int x) {
    int&& y = x;
}
EXPECT_MESSAGE
:2:8: error variable 'y' cannot have rvalue reference type 'int&&'
END


BEGIN Global lvalue reference type variable
const int x = 1;
const int &y = x;
EXPECT_GLOBALS
[["var","ES",["Qc","Si"],"x",1],["var","ES",["Bl",["Qct","Si"]],"y","Nx"]]


BEGIN Global rvalue reference type variable
const int x = 1;
const int &&y = x;
EXPECT_MESSAGE
:2:11: error variable 'y' cannot have rvalue reference type 'int const&&'
END
