BEGIN Variable of unevaluated typeof expression
typeof(1L / 0L) x;
EXPECT_AST
[["var", "ES", "Sl", "x"]]


BEGIN Variable of typeof type name
typeof(const double) x;
EXPECT_AST
[["var","ES",["Qc","Fd"],"x"]]


BEGIN Variable of typeof_unqual qualified type name (1)
typeof_unqual(const double) x;
EXPECT_AST
[["var", "ES", "Fd", "x"]]


BEGIN Variable of typeof_unqual qualified type name (2)
#type T
typeof_unqual(T) x;
typedef const double T;
EXPECT_GLOBALS
[["typedef",["Qc","Fd"],"T"]
,["var","ES","Fd","x"]]


BEGIN typeof variable
const double x;
typeof(x) y;
EXPECT_AST
[["var","ES",["Qc","Fd"],"x"]
,["var","ES",["Qc","Fd"],"y"]]


BEGIN typeof_unqual variable
const double x;
typeof_unqual(x) y;
EXPECT_AST
[["var","ES",["Qc","Fd"],"x"]
,["var","ES","Fd","y"]]


BEGIN Error on incomplete variable
void x;
EXPECT_MESSAGE
:1:6: error variable 'x' has incomplete type
END


BEGIN #extern directives composed
#extern x
#extern x
EXPECT_MESSAGE
:1:9: error variable 'x' has incomplete type
EXPECT_GLOBALS
[["var","ES","?","x"]]


BEGIN #extern directive preceeding variable declaration
#extern x
int x;
EXPECT_GLOBALS
[["var","ES","Si","x"]]


BEGIN #static directive preceeding variable declaration
#static x
int x;
EXPECT_GLOBALS
[["var","IS","Si","x"]]


BEGIN Variable declared both static and extern has internal linkage (1)
extern int x;
static int x;
EXPECT_GLOBALS
[["var","IS","Si","x"]]


BEGIN Variable declared both static and extern has internal linkage (2)
static int x;
extern int x;
EXPECT_GLOBALS
[["var","IS","Si","x"]]

