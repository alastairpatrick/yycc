BEGIN Error if array size is not integer
int x[1.5];
EXPECT_MESSAGE
:1:7: error size of array must have integer type
EXPECT_AST
[["var","ES",["A","Si",1],"x"]]


BEGIN Constant folds array size
int x[1 + 1];
EXPECT_AST
[["var","ES",["A","Si",2],"x"]]


BEGIN Composite type of incomplete array and complete array (1)
int x[];
int x[1];
EXPECT_GLOBALS
[["var","ES",["A","Si",1],"x"]]


BEGIN Composite type of incomplete array and complete array (2)
int x[1];
int x[];
EXPECT_GLOBALS
[["var","ES",["A","Si",1],"x"]]


BEGIN Composite type of complete arrays with same size
int x[1];
int x[1];
EXPECT_GLOBALS
[["var","ES",["A","Si",1],"x"]]


BEGIN Composite type of complete arrays with different constant integer size expressions evaluating to same size
int x[2];
int x[1+1];
EXPECT_GLOBALS
[["var","ES",["A","Si",2],"x"]]


BEGIN Complete arrays with different sizes are not compatible
int x[2];
int x[1];
EXPECT_MESSAGE
:2:5: error redeclaration of variable 'x' with incompatible type...
:1:5: ...see other
EXPECT_GLOBALS
[["var","ES",["A","Si",2],"x"]]


BEGIN Error on array of incomplete array type
int x[][];
EXPECT_MESSAGE
:1:6: error array element has incomplete type
:1:5: error variable 'x' has incomplete type
EXPECT_GLOBALS
[["var","ES",["A","Si"],"x"]]


BEGIN Error on array of incomplete struct type
struct S;
S x[1];
EXPECT_MESSAGE
:2:4: error array element has incomplete type
EXPECT_GLOBALS
[["typedef",["STRUCT",["?"]],"S"]
,["var","ES",["A","Si",1],"x"]]


BEGIN Error on array of incomplete union type
union U;
U x[1];
EXPECT_MESSAGE
:2:4: error array element has incomplete type
EXPECT_GLOBALS
[["typedef",["UNION",["?"]],"U"]
,["var","ES",["A","Si",1],"x"]]


BEGIN Error on array of incomplete enum type
enum E;
E x[1];
EXPECT_MESSAGE
:2:4: error array element has incomplete type
EXPECT_GLOBALS
[["typedef",["ENUM",["?"]],"E"]
,["var","ES",["A","Si",1],"x"]]



BEGIN Error on array of function type
typedef void F(void);
F x[1];
EXPECT_MESSAGE
:2:4: error array element type may not be function
EXPECT_GLOBALS
[["typedef",["F","V"],"F"]
,["var","ES",["A","Si",1],"x"]]


BEGIN Error on array of qualified incomplete type
struct S;
const S x[1];
EXPECT_MESSAGE
:2:10: error array element has incomplete type
EXPECT_GLOBALS
[["typedef",["STRUCT",["?"]],"S"]
,["var","ES",["A","Si",1],"x"]]


BEGIN Array size given by sizeof expression (1)
int x;
char a[sizeof(x)];
EXPECT_GLOBALS
[["var","ES",["A","C",4],"a"]
,["var","ES","Si","x"]]


BEGIN Array size given by sizeof expression (2)
int x;
char a[sizeof(1)];
EXPECT_GLOBALS
[["var","ES",["A","C",4],"a"]
,["var","ES","Si","x"]]


BEGIN Size of array
char c[3];
char a[sizeof(c)];
EXPECT_GLOBALS
[["var","ES",["A","C",3],"a"]
,["var","ES",["A","C",3],"c"]]


BEGIN Error on sizeof incomplete array type
char a[sizeof(float[])];
EXPECT_MESSAGE
:1:8: error sizeof applied to incomplete type
EXPECT_GLOBALS
[["var","ES",["A","C"],"a"]]


BEGIN Impossible recursive array size (1)
char a[sizeof(a)];
EXPECT_MESSAGE
:1:15: error 'a' undeclared
EXPECT_GLOBALS
[["var","ES",["A","C",4],"a"]]


BEGIN Impossible recursive array size (2)
char a[];
char a[sizeof(a)];
EXPECT_MESSAGE
:2:6: error recursive definition of 'a'
EXPECT_GLOBALS
[["var","ES",["A","C"],"a"]]


BEGIN Initializer string gives array size
char a[] = "abc";
EXPECT_GLOBALS
[["var","ES",["A","C",4],"a",["S","C","abc"]]]


BEGIN Initializer string size can be shorter than declared array size
char a[10] = "abc";
EXPECT_GLOBALS
[["var","ES",["A","C",10],"a",["S","C","abc"]]]


BEGIN Error if initializer string size exceeds array size
char a[1];
char a[] = "abc";
EXPECT_MESSAGE
:2:12: error size of string literal (4) exceeds declared array size (1)
END


BEGIN Initializer expression gives array size
int a[] = { 1, 2 };
EXPECT_GLOBALS
[["var","ES",["A","Si",2],"a",["Init",1,2]]]


BEGIN Initializer expression size can be shorter than declared array size
int a[10] = { 1, 2 };
EXPECT_GLOBALS
[["var","ES",["A","Si",10],"a",["Init",1,2]]]


BEGIN Error if initializer expression size exceeds array size
int a[1];
int a[] = { 1, 2, 3 };
EXPECT_MESSAGE
:2:16: error excess elements in array initializer
END
