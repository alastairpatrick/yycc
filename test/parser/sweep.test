BEGIN marks identifiers in declaration type
#include "a.h"
T x;
PREPROCESS
FILE "a.h"
typedef int T;
EXPECT_TEXT

#line 1 "a.h"
typedef int T;
#line 2 ""
T x;
END


BEGIN marks identifiers in array declarator
#include "a.h"
int x;
PREPROCESS
FILE "a.h"
extern int x;
EXPECT_TEXT

#line 1 "a.h"
extern int x;
#line 2 ""
int x;
END


BEGIN marks identifiers in array declarator size expression
#include "a.h"
int x[y];
PREPROCESS
FILE "a.h"
const int y = 2;  // TODO: replace this with a avalid constant integer expression
EXPECT_TEXT

#line 1 "a.h"
const int y = 2;
#line 2 ""
int x[y];
END


BEGIN marks identifiers in function prototype
#include "a.h"
int foo(T x);
PREPROCESS
FILE "a.h"
typedef int T;
EXPECT_TEXT

#line 1 "a.h"
typedef int T;
#line 2 ""
int foo(T x);
END


BEGIN marks identifiers in function definition body
#include "a.h"
int foo(void) {
    T x;
}
PREPROCESS
FILE "a.h"
typedef int T;
EXPECT_TEXT

#line 1 "a.h"
typedef int T;
#line 2 ""
int foo(void) {
    T x;
}
END
