BEGIN Unnamed struct definition
struct { int x; int y; } z;
EXPECT_AST
[["var", "ES", ["STRUCT", ["x", "Si"], ["y", "Si"]], "z", ""]]


BEGIN Named struct definition
struct S { int x; int y; } z;
EXPECT_AST
[["var", "ES", ["DECLARE", "S", ["STRUCT", ["x", "Si"], ["y", "Si"]]], "z", ""]]


BEGIN Named struct
struct S z;
PREPARSE
EXPECT_AST
[["var", "ES", "NsS", "z", ""]]


BEGIN Bit-field
struct { int x: 15; int y: 17; } z;
EXPECT_AST
[["var", "ES", ["STRUCT", ["x", "Si", 15], ["y", "Si", 17]], "z", ""]]


BEGIN Error on bit-field variable
int x: 2;
EXPECT_MESSAGE
:1:6: error unexpected token
:1:8: error unexpected token
EXPECT_AST
[["var", "ES", "Si", "x", ""]]


BEGIN Error on standalone struct keyword
struct;
EXPECT_MESSAGE
:1:7: error unexpected token
EXPECT_AST
[[]]


BEGIN Error on combination of struct specifier and type specifier
typedef float T;
T struct S v;
EXPECT_MESSAGE
:2:3: error invalid type specifier combination
EXPECT_AST
[["typedef","Ff","T"],["var","ES","Si","v",""]]


BEGIN Unnamed union definition
union { int x; int y; } z;
EXPECT_AST
[["var", "ES", ["UNION", ["x", "Si"], ["y", "Si"]], "z", ""]]


BEGIN Named union definition
union S { int x; int y; } z;
EXPECT_AST
[["var", "ES", ["DECLARE", "S", ["UNION", ["x", "Si"], ["y", "Si"]]], "z", ""]]


BEGIN Named union
union S z;
PREPARSE
EXPECT_AST
[["var", "ES", "NuS", "z", ""]]


BEGIN Unnamed enum definition
enum { A=1, B } z;
EXPECT_AST
[["var", "ES", ["ENUM", ["A", 1], ["B"]], "z", ""]]


BEGIN Named enum definition
enum E { A=1, B } z;
EXPECT_AST
[["var", "ES", ["DECLARE", "E", ["ENUM", ["A", 1], ["B"]]], "z", ""]]


BEGIN Named enum
enum E z;
PREPARSE
EXPECT_AST
[["var", "ES", "NeE", "z", ""]]
