BEGIN Unnamed struct definition
struct { int x; int y; } z;
EXPECT_AST
[["var", "ES", ["STRUCT", [["x", "Si"], ["y", "Si"]]], "z", ""]]


BEGIN Named struct definition
struct S { int x; int y; } z;
EXPECT_AST
[["var", "ES", ["STRUCT", [["x", "Si"], ["y", "Si"]]], "z", ""]]
EXPECT_GLOBALS
[["typedef",["STRUCT",[["x","Si"],["y","Si"]]],"S"]
,["var","ES",["STRUCT",[["x","Si"],["y","Si"]]],"z",""]]


BEGIN Named struct
struct S z;
EXPECT_AST
[["var","ES",["STRUCT",["?"]],"z",""]]
EXPECT_GLOBALS
[["typedef",["STRUCT",["?"]],"S"]
,["var","ES",["STRUCT",["?"]],"z",""]]


BEGIN Named struct definition with no declarators
struct S { int x; int y; };
EXPECT_AST
[["declare",["STRUCT",[["x","Si"],["y","Si"]]]]]
EXPECT_GLOBALS
[["typedef",["STRUCT",[["x","Si"],["y","Si"]]],"S"]]


BEGIN Named struct with no declarators
struct S;
EXPECT_AST
[["declare",["STRUCT",["?"]]]]
EXPECT_GLOBALS
[["typedef",["STRUCT",["?"]],"S"]]


BEGIN Bit-field
struct { int x: 15; int y: 17; } z;
EXPECT_AST
[["var", "ES", ["STRUCT", [["x", "Si", 15], ["y", "Si", 17]]], "z", ""]]


BEGIN Anonymous struct
struct {
    struct {
        int x;
    };
} z;
EXPECT_AST
[["var","ES",["STRUCT",[["",["STRUCT",[["x","Si"]]]]]],"z",""]]


BEGIN Anonymous union
struct {
    union {
        int x;
    };
} z;
EXPECT_AST
[["var","ES",["STRUCT",[["",["UNION",[["x","Si"]]]]]],"z",""]]


BEGIN Only structs and unions may be anonymous
struct {
    int;
} z;
EXPECT_AST
[["var","ES",["STRUCT",[]],"z",""]]


BEGIN Error on bit-field variable
int x: 2;
EXPECT_MESSAGE
:1:6: error unexpected token
EXPECT_AST
[["var", "ES", "Si", "x", ""]]


BEGIN Error on standalone struct keyword
struct;
EXPECT_AST
[["declare",["STRUCT",["?"]]]]


BEGIN Struct members are not added to symbol map
int x;
struct Foo {
    float x, y;
};
EXPECT_GLOBALS
[["typedef",["STRUCT",[["x","Ff"],["y","Ff"]]],"Foo"],["var","ES","Si","x",""]]


BEGIN Struct is in scope within body
struct S {
    S* p;
};
EXPECT_AST
[["declare",["STRUCT",[["p",["P",["STRUCT","recursive"]]]]]]]
EXPECT_GLOBALS
[["typedef",["STRUCT",[["p",["P",["STRUCT","recursive"]]]]],"S"]]


BEGIN Error on combination of struct specifier and type specifier
typedef float T;
T struct S v;
EXPECT_MESSAGE
:2:3: error invalid type specifier combination
EXPECT_AST
[["typedef","Ff","T"],["var","ES","Si","v",""]]


BEGIN Unnamed union definition
union { int x; int y; } z;
EXPECT_AST
[["var", "ES", ["UNION", [["x", "Si"], ["y", "Si"]]], "z", ""]]


BEGIN Named union definition
union S { int x; int y; } z;
EXPECT_AST
[["var", "ES", ["UNION", [["x", "Si"], ["y", "Si"]]], "z", ""]]
EXPECT_GLOBALS
[["typedef",["UNION",[["x","Si"],["y","Si"]]],"S"]
,["var","ES",["UNION",[["x","Si"],["y","Si"]]],"z",""]]


BEGIN Named union
union S z;
EXPECT_AST
[["var","ES",["UNION",["?"]],"z",""]]
EXPECT_GLOBALS
[["typedef",["UNION",["?"]],"S"]
,["var","ES",["UNION",["?"]],"z",""]]


BEGIN Unnamed enum definition
enum { A=1, B } z;
EXPECT_AST
[["var", "ES", ["ENUM", [["ec", "A", 1], ["ec", "B"]]], "z", ""]]


BEGIN Named enum definition
enum E { A=1, B } z;
EXPECT_AST
[["var", "ES", ["ENUM", [["ec", "A", 1], ["ec", "B"]]], "z", ""]]
EXPECT_GLOBALS
[["ec","A",1]
,["ec","B"]
,["typedef",["ENUM",[["ec","A",1],["ec","B"]]],"E"]
,["var","ES",["ENUM",[["ec","A",1],["ec","B"]]],"z",""]]


BEGIN Named enum
enum E z;
EXPECT_AST
[["var","ES",["ENUM",["?"]],"z",""]]
EXPECT_GLOBALS
[["typedef",["ENUM",["?"]],"E"],
["var","ES",["ENUM",["?"]],"z",""]]


BEGIN #static enum directive
#static enum A
DECLARATIONS
EXPECT_GLOBALS
[["ec","A"]]
