BEGIN Emit explicit return void
void f() {
    return;
}
EXPECT_IR
define void @f() {
  ret void
}
END


BEGIN Emit implicit return void
void f() {
}
EXPECT_IR
define void @f() {
  ret void
}
END


BEGIN Emit return constant
int f() {
    return 0;
}
EXPECT_IR
define i32 @f() {
  ret i32 0
}
END


BEGIN Emit implicit return null value (1)
int f() {
}
EXPECT_IR
define i32 @f() {
  ret i32 0
}
END


BEGIN Emit implicit return null value (2)
struct S { int x; };
S f() {
}
EXPECT_IR
define { i32 } @f() {
  ret { i32 } zeroinitializer
}
END


BEGIN Volatile store
void f() {
    volatile int x;
    x = 1;
}
EXPECT_IR
define void @f() {
  %x = alloca i32, align 4
  store i32 0, ptr %x, align 4
  store volatile i32 1, ptr %x, align 4
  ret void
}
END


BEGIN Volatile load
void f() {
    volatile int x;
    x + 1;
}
EXPECT_IR
define void @f() {
  %x = alloca i32, align 4
  store i32 0, ptr %x, align 4
  %1 = load volatile i32, ptr %x, align 4
  %2 = add i32 %1, 1
  ret void
}
END
