BEGIN Static storage class declaration
static int x;
EXPECT_AST
[["var", "IS", "Si", "x", ""]]

BEGIN Extern storage class declaration
extern int x;
EXPECT_AST
[["var", "ES", "Si", "x"]]

BEGIN Typedef storage class declaration
typedef int x;
EXPECT_AST
[["typedef", "Si", "x"]]

BEGIN Auto storage class declaration
auto int x;
EXPECT_AST
[["var", "ES", "Si", "x", ""]]

BEGIN Register storage class declaration
register int x;
EXPECT_AST
[["var", "ES", "Si", "x", ""]]

BEGIN Error on declaration with multiple storage classes
auto register int x;
EXPECT_MESSAGE
:1:6: error too many storage classes
EXPECT_AST
[["var", "ES", "Si", "x", ""]]


BEGIN void variable declaration
void x;
EXPECT_AST
[["var", "ES", "V", "x", ""]]

BEGIN char variable declaration
char x;
EXPECT_AST
[["var", "ES", "C", "x", ""]]

BEGIN signed char variable declaration
signed char x;
EXPECT_AST
[["var", "ES", "Sc", "x", ""]]

BEGIN unsigned char variable declaration
char unsigned x;
EXPECT_AST
[["var", "ES", "Uc", "x", ""]]

BEGIN short variable declaration
short x;
EXPECT_AST
[["var", "ES", "Ss", "x", ""]]

BEGIN signed short variable declaration
short signed x;
EXPECT_AST
[["var", "ES", "Ss", "x", ""]]

BEGIN short int variable declaration
short int x;
EXPECT_AST
[["var", "ES", "Ss", "x", ""]]

BEGIN signed short int variable declaration
short signed int x;
EXPECT_AST
[["var", "ES", "Ss", "x", ""]]

BEGIN unsigned short variable declaration
unsigned short x;
EXPECT_AST
[["var", "ES", "Us", "x", ""]]

BEGIN int variable declaration
int x;
EXPECT_AST
[["var", "ES", "Si", "x", ""]]

BEGIN signed variable declaration
signed x;
EXPECT_AST
[["var", "ES", "Si", "x", ""]]

BEGIN signed int variable declaration
signed int x;
EXPECT_AST
[["var", "ES", "Si", "x", ""]]

BEGIN unsigned variable declaration
unsigned x;
EXPECT_AST
[["var", "ES", "Ui", "x", ""]]

BEGIN unsigned int variable declaration
int unsigned x;
EXPECT_AST
[["var", "ES", "Ui", "x", ""]]

BEGIN long variable declaration
long x;
EXPECT_AST
[["var", "ES", "Sl", "x", ""]]

BEGIN signed long variable declaration
signed long x;
EXPECT_AST
[["var", "ES", "Sl", "x", ""]]

BEGIN long int variable declaration
int long x;
EXPECT_AST
[["var", "ES", "Sl", "x", ""]]

BEGIN signed long int variable declaration
long int signed x;
EXPECT_AST
[["var", "ES", "Sl", "x", ""]]

BEGIN unsigned long variable declaration
unsigned long x;
EXPECT_AST
[["var", "ES", "Ul", "x", ""]]

BEGIN unsigned long int variable declaration
unsigned int long x;
EXPECT_AST
[["var", "ES", "Ul", "x", ""]]

BEGIN long variable declaration
long long x;
EXPECT_AST
[["var", "ES", "Sm", "x", ""]]

BEGIN signed long long variable declaration
signed long long x;
EXPECT_AST
[["var", "ES", "Sm", "x", ""]]

BEGIN long long int variable declaration
int long long x;
EXPECT_AST
[["var", "ES", "Sm", "x", ""]]

BEGIN signed long long int variable declaration
long long int signed x;
EXPECT_AST
[["var", "ES", "Sm", "x", ""]]

BEGIN unsigned long long variable declaration
unsigned long long x;
EXPECT_AST
[["var", "ES", "Um", "x", ""]]

BEGIN unsigned long long int variable declaration
unsigned int long long x;
EXPECT_AST
[["var", "ES", "Um", "x", ""]]

BEGIN float variable declaration
float x;
EXPECT_AST
[["var", "ES", "Ff", "x", ""]]

BEGIN double variable declaration
double x;
EXPECT_AST
[["var", "ES", "Fd", "x", ""]]

BEGIN long double variable declaration
long double x;
EXPECT_AST
[["var", "ES", "Fl", "x", ""]]

BEGIN bool variable declaration
_Bool x;
EXPECT_AST
[["var", "ES", "Ub", "x", ""]]


BEGIN No implicit int declaration
static x;
DECLARATIONS
EXPECT_MESSAGE
:1:8: error type 'x' undefined
END


BEGIN Error on duplicate type specifiers (except long)
short short x;
EXPECT_MESSAGE
:1:7: error invalid declaration specifier or type qualifier combination
EXPECT_AST
[["var", "ES", "Ss", "x", ""]]


BEGIN Error on invalid type specifier combination
short float x;
EXPECT_MESSAGE
:1:7: error invalid type specifier combination
EXPECT_AST
[["var", "ES", "Si", "x", ""]]


BEGIN Error on too many long type specifiers
long long long x;
EXPECT_MESSAGE
:1:11: error invalid type specifier combination
EXPECT_AST
[["var", "ES", "Sm", "x", ""]]


BEGIN Const qualified declarators
const int x;
EXPECT_AST
[["var", "ES", ["Qc", "Si"], "x", ""]]


BEGIN Restrict qualified declarators
restrict int x;
EXPECT_AST
[["var", "ES", ["Qr", "Si"], "x", ""]]


BEGIN Restrict qualified declarators
volatile int x;
EXPECT_AST
[["var", "ES", ["Qv", "Si"], "x", ""]]


BEGIN Multiply qualified declarators
int volatile restrict const x;
EXPECT_AST
[["var", "ES", ["Qcrv", "Si"], "x", ""]]


BEGIN Declaration type qualifiers may be repeated
volatile volatile int x;
EXPECT_AST
[["var", "ES", ["Qv", "Si"], "x", ""]]


BEGIN Multiple declarators
int x, y;
EXPECT_AST
[[["var", "ES", "Si", "x", ""]
 ,["var", "ES", "Si", "y", ""]]]


BEGIN Declaration with no declarators
short;
EXPECT_AST
[["declare","Ss"]]


BEGIN Declaration with missing declarator identifiers
short,;
EXPECT_MESSAGE
:1:6: error expected identifier but got ','
EXPECT_AST
[["declare","Ss"]]


BEGIN Declarators must be separated by comma
short a b;
EXPECT_MESSAGE
:1:9: error expected ';' but got 'b'
EXPECT_AST
[["var", "ES", "Ss", "a", ""]]


BEGIN Pointer declarators
int **x, *y;
EXPECT_AST
[[["var", "ES", ["P", ["P", "Si"]], "x", ""]
 ,["var", "ES", ["P", "Si"], "y", ""]]]


BEGIN Function pointer declarator
void (*f)(int);
EXPECT_AST
[["var","ES",["P",["F","V","Si"]],"f",""]]


BEGIN Array declarators
int x[], y[1], z[1][2][];
EXPECT_AST
[[["var", "ES", ["A", "Si"], "x", ""]
 ,["var", "ES", ["A", "Si", 1], "y", ""]
 ,["var", "ES", ["A", ["A", ["A", "Si"], 2], 1], "z", ""]]]


BEGIN Array with nested declarators
int (*apfi[3])(int *x, int *y);
EXPECT_AST
[["var","ES",["A",["P",["F","Si",["P","Si"],["P","Si"]]],3],"apfi",""]]


BEGIN Const declarator
int* const y;
EXPECT_AST
[["var", "ES", ["Qc", ["P", "Si"]], "y", ""]]


BEGIN Restrict declarator
int* restrict y;
EXPECT_AST
[["var", "ES", ["Qr", ["P", "Si"]], "y", ""]]


BEGIN Volatile declarator
int* volatile y;
EXPECT_AST
[["var", "ES", ["Qv", ["P", "Si"]], "y", ""]]


BEGIN Declarator with multiple qualifiers interleaved with pointers
int x, * const * volatile restrict y;
EXPECT_AST
[[["var", "ES", "Si", "x", ""]
 ,["var", "ES", ["Qrv", ["P", ["Qc", ["P", "Si"]]]], "y", ""]]]


BEGIN Array type of non-parameter variable may not be qualified
int x[const volatile restrict 1];
DECLARATIONS
EXPECT_MESSAGE
:1:7: error unexpected token 'const'
EXPECT_AST
[["var", "ES", ["A", "Si", 1], "x", ""]]


BEGIN Array type of non-parameter variable may not be static
int x[static 1];
DECLARATIONS
EXPECT_MESSAGE
:1:7: error unexpected token 'static'
EXPECT_AST
[["var", "ES", ["A", "Si", 1], "x", ""]]


BEGIN Declarator initializers
int x = 1, y = 2;
EXPECT_AST
[[["var", "ES", "Si", "x", 1]
 ,["var", "ES", "Si", "y", 2]]]


BEGIN Declarators in parentheses
int ((x)), (*y);
EXPECT_AST
[[["var", "ES", "Si", "x", ""]
 ,["var", "ES", ["P", "Si"], "y", ""]]]


BEGIN Variable declarations may not be inline
inline int i;
EXPECT_MESSAGE
:1:1: error 'inline' may only appear on function
EXPECT_AST
[["var", "ES", "Si", "i", ""]]


BEGIN Variable of type declared in other translation unit
T x;
PREPARSE
EXPECT_AST
[["var", "ES", "NT", "x", ""]]


BEGIN #extern entity directive
#extern entity x
DECLARATIONS
EXPECT_GLOBALS
[["var","ES","?","x"]]


BEGIN #static entity directive
#static entity x
DECLARATIONS
EXPECT_GLOBALS
[["var","IS","?","x"]]


BEGIN Error if identifier declared with both #extern and #static
#extern entity f
#static entity f
DECLARATIONS
EXPECT_MESSAGE
:2:16: error static declaration of 'f' follows non-static declaration
:1:16: see prior declaration
EXPECT_GLOBALS
[["var","ES","?","f"]]
